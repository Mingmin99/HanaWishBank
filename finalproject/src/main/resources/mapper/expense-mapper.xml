<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kopo.finalproject.Expense.model.dao.ExpenseMapper">

    <select id="getTotalExpenseAmount" resultType="com.kopo.finalproject.Expense.model.dto.TotalExpenseAmount">
        <![CDATA[
        SELECT SUM(ExpenseAmount) AS TotalExpenseAmount
        FROM Expense
        WHERE ExpenseDate >= TRUNC(SYSDATE) - 30
          AND ExpenseDate < TRUNC(SYSDATE)
          AND CardID = #{cardID}
        ]]>
    </select>

    <select id="getExpenseChartData">
        <![CDATA[
        SELECT ec.description, SUM(e.ExpenseAmount) AS TotalExpenseCategoryExpenseAmount
        FROM Expense e
                 JOIN ExpenseCategory ec ON e.ExpenseCategoryCode = ec.code
        WHERE e.ExpenseDate >= TRUNC(SYSDATE) - 30 AND e.ExpenseDate < TRUNC(SYSDATE)
          AND e.CardID = #{cardID}
          AND e.MemberID = #{memberID}
        GROUP BY e.ExpenseCategoryCode, ec.description
        ORDER BY TotalExpenseCategoryExpenseAmount DESC
        ]]>
    </select>

    <select id="getTopCategory" resultType="com.kopo.finalproject.Expense.model.dto.ExpenseMaxCountCategory">
        <![CDATA[
        SELECT ec.description AS ExpenseCategoryDescription, COUNT(*) AS CategoryCount
        FROM Expense e
                 INNER JOIN ExpenseCategory ec ON e.ExpenseCategoryCode = ec.code
        WHERE e.ExpenseDate >= TRUNC(SYSDATE) - 30
          AND e.ExpenseDate < TRUNC(SYSDATE)
          AND e.CardID = #{cardID}
        GROUP BY ec.description
        ORDER BY CategoryCount DESC
            FETCH FIRST 1 ROWS ONLY
        ]]>
    </select>

    <select id="getTopAmount" resultType="com.kopo.finalproject.Expense.model.dto.ExpenseMaxSumCategory">
      <![CDATA[
        SELECT ec.description AS ExpenseCategoryDescription, SUM(e.ExpenseAmount) AS TotalAmount
        FROM Expense e
                 INNER JOIN ExpenseCategory ec ON e.ExpenseCategoryCode = ec.code
        WHERE e.ExpenseDate >= TRUNC(SYSDATE) - 30
          AND e.ExpenseDate < TRUNC(SYSDATE)
          AND e.CardID = #{cardID}
        GROUP BY ec.description
        ORDER BY TotalAmount DESC
            FETCH FIRST 1 ROWS ONLY
        ]]>
    </select>


    <select id="getTopCategoryDetailedExpenseCategory" resultType="com.kopo.finalproject.Expense.model.dto.SubCategory">
    <![CDATA[
        WITH TopExpenseCategory AS (SELECT ec.description AS CategoryDescription, COUNT(*) AS CategoryCount
                                    FROM Expense e
                                             JOIN ExpenseCategory ec ON e.ExpenseCategoryCode = ec.code
                                    WHERE e.ExpenseDate >= TRUNC(SYSDATE) - 30
                                      AND e.ExpenseDate < TRUNC(SYSDATE)
                                      AND e.CardID = #{cardID}
                                    GROUP BY ec.description
                                    ORDER BY CategoryCount DESC
                                        FETCH FIRST 1 ROWS ONLY)
        SELECT de.description AS SubCategoryDescription,
               de.RepresentativePrice,
               de.ParentCategoryCode,
               de.TagImage,
               COUNT(*)       AS SubCategoryCount
        FROM Expense e
                 JOIN ExpenseCategory ec ON e.ExpenseCategoryCode = ec.code
                 JOIN DetailedExpenseCategory de ON de.ParentCategoryCode = ec.code
                 JOIN TopExpenseCategory tec ON ec.description = tec.CategoryDescription -- 여기서 수정
        WHERE e.ExpenseDate >= TRUNC(SYSDATE) - 30
          AND e.ExpenseDate < TRUNC(SYSDATE)
          AND e.CardID = #{cardID}
        GROUP BY de.description, de.RepresentativePrice, de.ParentCategoryCode, de.TagImage
        ORDER BY SubCategoryCount DESC
            FETCH FIRST 1 ROWS ONLY
        ]]>
</select>


    <select id="getTopAmountDetailedExpenseCategory" resultType="com.kopo.finalproject.Expense.model.dto.SubCategory">
    <![CDATA[
        WITH TopExpenseCategory AS (SELECT ec.description AS ExpenseCategoryDescription
                                    FROM Expense e
                                             JOIN ExpenseCategory ec ON e.ExpenseCategoryCode = ec.code
                                    WHERE e.ExpenseDate >= TRUNC(SYSDATE) - 30
                                      AND e.ExpenseDate < TRUNC(SYSDATE)
                                      AND e.CardID = #{cardID}
                                    GROUP BY ec.description
                                    ORDER BY SUM(e.ExpenseAmount) DESC
                                        FETCH FIRST 1 ROWS ONLY)

        SELECT SubCategoryDescription,
               RepresentativePrice,
               ParentCategoryCode,
               TagImage,
               SubCategoryCount
        FROM (SELECT de.description AS SubCategoryDescription,
                     de.RepresentativePrice,
                     de.ParentCategoryCode,
                     de.TagImage,
                     COUNT(*)       AS SubCategoryCount
              FROM Expense e
                       JOIN ExpenseCategory ec ON e.ExpenseCategoryCode = ec.code
                       JOIN DetailedExpenseCategory de ON de.ParentCategoryCode = ec.code
                       JOIN TopExpenseCategory tec ON ec.description = tec.ExpenseCategoryDescription
              WHERE e.ExpenseDate >= TRUNC(SYSDATE) - 30
                AND e.ExpenseDate < TRUNC(SYSDATE)
                AND e.CardID = #{cardID}
              GROUP BY de.description, de.RepresentativePrice, de.ParentCategoryCode, de.TagImage
              ORDER BY COUNT(*) DESC)
        WHERE ROWNUM = 1
        ]]>
</select>

</mapper>
