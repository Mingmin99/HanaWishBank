<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kopo.finalproject.Savings.model.dao.SavingsMapper">


    <select id="getAllAccounts" resultType="com.kopo.finalproject.Savings.model.dto.Account">
        SELECT *
        FROM Account
    </select>
    <insert id="insertPaymentPlan" parameterType="com.kopo.finalproject.Savings.model.dto.ChallengeSavings">
        INSERT INTO ChallengeSavings (planName, memberID, targetSavingsPeriod, targetSavingsAmount, paymentFrequency,
                                      paymentDate,
                                      paymentDay, paymentAmount, transferMethod, transferAccount, expectedPrincipal,
                                      expectedInterest, expirationOption, endDay, challengeSavingsAccountPW,
                                      challengeSavingsAccountNumber)
        VALUES (#{planName}, #{memberID}, #{targetSavingsPeriod}, #{targetSavingsAmount}, #{paymentFrequency},
                #{paymentDate},
                #{paymentDay}, #{paymentAmount}, #{transferMethod}, #{transferAccount}, #{expectedPrincipal},
                #{expectedInterest}, #{expirationOption}, #{endDay, jdbcType=DATE}, #{challengeSavingsAccountPW},
                #{challengeSavingsAccountNumber})
    </insert>

    <update id="firstWithdrawal">
        UPDATE ChallengeSavings
        SET accountBalance = accountBalance + #{paymentAmount}
        WHERE challengeSavingsAccountNumber = #{challengeSavingsAccountNumber}
          AND memberID = #{memberID}
    </update>
    <update id="firstDeposit">
        UPDATE Account
        SET Balance = Balance - #{paymentAmount}
        WHERE AccountNumber = #{transferAccount}
          AND memberID = #{memberID}
    </update>

    <insert id="insertTransferRecord" parameterType="com.kopo.finalproject.Savings.model.dto.ChallengeSavings">
        INSERT INTO TransferRecord (memberID, DepositAccount, AccountNumber, TransferAmount)
        VALUES (#{memberID}, #{challengeSavingsAccountNumber}, #{transferAccount}, #{paymentAmount})
    </insert>

    <select id="getAllChallengeSavings" resultType="com.kopo.finalproject.Savings.model.dto.ChallengeSavings">
        SELECT *
        FROM ChallengeSavings
        WHERE MemberID = #{memberID}
        AND ExpirationStatus = 'F'
    </select>

    <!-- PlanItemRatio 엔티티와 관련된 매퍼 -->
    <update id="updatePlanItemRatio" parameterType="com.kopo.finalproject.Savings.model.dto.PlanItemRatio">
        UPDATE PurchasePlanListItem
        SET AllocationRatio = #{ratio}
        WHERE PurchasePlanID = #{selectPurchasePlanID}
    </update>

    <update id="updatePlanItemSavingStatus">
        UPDATE PurchasePlanListItem
        SET SavingStatus = 'T'
        WHERE PurchasePlanID = #{purchasePlanID}
          AND MemberID = #{memberID}
    </update>

    <update id="updatePlanListItemSavingsAccountNumber">
        UPDATE PurchasePlanListItem
        SET challengeSavingsAccountNumber = #{challengeSavingsAccountNumber}
        WHERE PurchasePlanID = #{purchasePlanID}
          AND MemberID = #{memberID}
    </update>

    <select id="getPurchasePlanByAccountNumber"
            resultType="com.kopo.finalproject.PurchasePlanList.model.dto.SavingPurchasePlan">
        SELECT *
        FROM PurchasePlanListItem
        WHERE MemberID = #{memberID}
          AND ChallengeSavingsAccountNumber = #{challengeSavingsAccountNumber}
    </select>


    <select id="getPurchasePlanAndWishListItemByAccountNumber"
            resultType="com.kopo.finalproject.Savings.model.dto.PurchasePlanAndWishListItem">
        SELECT pp.PurchasePlanID,
               pp.PlanName,
               pp.PlanAmount,
               pp.PlanPeriod,
               pp.AllocationRatio,
               wl.WishListID,
               wl.Title,
               wl.Price,
               wl.Image
        FROM PurchasePlanListItem pp
                 INNER JOIN WishListItem wl
                            ON pp.WishListID = wl.WishListID
                                AND pp.MemberID = wl.MemberID
        WHERE pp.MemberID = #{memberID}
          AND pp.ChallengeSavingsAccountNumber = #{challengeSavingsAccountNumber}
    </select>


    <!-- 이 태그는 "Account" 테이블의 Balance 열을 업데이트합니다. -->
    <update id="completedSavingsDeposit">
        UPDATE Account
        SET Balance = Balance + #{withdrawalAccountBalance}
        WHERE AccountNumber = #{selectedAccount}
          AND MemberID = #{memberID}
    </update>

    <update id="completedSavingsWithdrawal">
        UPDATE ChallengeSavings
        SET AccountBalance = AccountBalance - #{withdrawalAccountBalance}
        WHERE ChallengeSavingsAccountNumber = #{withdrawalAccount}
          AND MemberID = #{memberID}
    </update>


    <insert id="insertCompletedSavingsTransferRecord" >
        INSERT INTO TransferRecord (memberID, DepositAccount, AccountNumber, TransferAmount, TransferMethod)
        VALUES (#{memberID}, #{selectedAccount},#{withdrawalAccount}, #{withdrawalAccountBalance}, #{transferMethod})
    </insert>



    <update id="updateCompletedSavingsExpirationStatus">
        UPDATE ChallengeSavings
        SET ExpirationStatus = 'T'
        WHERE ChallengeSavingsAccountNumber = #{withdrawalAccount}
          AND MemberID = #{memberID}
    </update>

</mapper>
